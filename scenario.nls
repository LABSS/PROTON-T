to-report random-birth-year report 0 - random 80 end
  
to-report propensity-factors
  ; first item is weight (in R+), second item is value (in [-1, 1])
  ; todo: confirm weight for attribute factors
  ; todo: figure out the best way to convert odds ratio to weights
  
  report (list
    (list 1     [ -> ifelse-value (get "male?") [ 1 ] [ 0 ] ])
    (list 1     [ -> ifelse-value (get "muslim?") [ 1 ] [ 0 ] ])
    (list 1     [ -> ifelse-value (get "immigrant?") [ 1 ] [ 0 ] ])
    (list 1.647 [ -> [ value ] of opinion-on-topic "Fundamentalism" ])
    (list 1.555 [ -> [ value ] of opinion-on-topic "Non integration" ])
    (list 1.381 [ -> [ value ] of opinion-on-topic "Institutional distrust" ])
    (list 1.475 [ -> [ value ] of opinion-on-topic "Collective relative deprivation" ])
  )
end

to-report risk-factors
  report (list
    (list 3.670 [ -> [ value ] of opinion-on-topic "Fundamentalism" ])
    (list 3.626 [ -> [ value ] of opinion-on-topic "Non integration" ])
    (list 2.417 [ -> [ value ] of opinion-on-topic "Institutional distrust" ])
    (list 3.609 [ -> [ value ] of opinion-on-topic "Collective relative deprivation" ])
  )
end

to-report attribute-definitions
  report (list
    (list "male?"      [ -> one-of [true false] ])
    (list "muslim?"    [ -> one-of [true false] ])
    (list "immigrant?" [ -> one-of [true false] ])
  )
end

to-report location-definitions
  report (list
    ;     number name/shape color
    (list      1 "mosque")
    (list      1 "school")
    (list      5 "public space")
    (list      5 "workplace")
    (list      5 "community center")
  )
end

to-report mandatory-activity-definition-list
  report (list
    ;     start-time duration location-type task         criteria
    (list          0        8 "residence"   [ -> sleep ] [ -> true ] )
    (list          8        8 "school"      [ -> study ] [ -> age >= 5 and age <= 18 ])
  )
end

to-report job-definition-list
  report (list
    ;     num-jobs start-time duration location-type task          criteria
    (list        1          8       16 "mosque"      [ -> preach ] [ -> age >= 21 and
      get "muslim?" and [ value ] of opinion-on-topic "Fundamentalism" = 1 ]
    )
    (list        1          8        8 "school"      [ -> teach  ] [ -> age >= 21 ])
    (list       50          8        8 "factory"     [ -> work   ] [ -> age >= 18 ])
    (list       50          8        8 "office"      [ -> work   ] [ -> age >= 18 ])
    (list        1         12        8 "bar"         [ -> work   ] [ -> age >= 18 ])
    (list        1         16        8 "bar"         [ -> work   ] [ -> age >= 18 ])
  )
end

to-report free-time-activity-definition-list
  report (list
    ;     location-type task             criteria
    (list "residence"    [ -> socialize ] [ -> true ])
    (list "public space" [ -> socialize ] [ -> true ])
    (list "mosque"       [ -> socialize ] [ -> get "muslim?" ])
  )
end

to work ; generic work activity
  if random-float 1 < 0.1 [ socialize ]
end

to preach
  show citizens-here
  talk-to other citizens-here one-of topics
end

to teach
  talk-to other citizens-here one-of topics
end

to-report topic-definitions
  let uniform [ -> -1 + random-float 2 ]
  report (list
    (list "Fundamentalism" uniform)
    (list "Non integration" uniform)
    (list "Institutional distrust" uniform)
    (list "Collective relative deprivation" uniform)
  )
end

to post-opinions-setup
  let n count locations with [ shape = "mosque" ]
  ask n-of n citizens with [ get "muslim?" ] [
    ask out-topic-link-to one-of topics with [ topic-name = "Fundamentalism" ] [
      set value 1
    ]
  ]
end