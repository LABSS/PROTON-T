to-report random-birth-year report 0 - random 80 end
  
to-report propensity-factors ; citizen reporter
                             ; first item is weight (in R+), second item is value (in [-1, 1])
                             ; todo: confirm weight for attribute factors
                             ; todo: figure out the best way to convert odds ratio to weights
  report (list
    [ -> ifelse-value (get "male?")             [ 0.113 ] [ 0     ] ]
    [ -> ifelse-value (employed?)               [ 0     ] [ 0.208 ] ]
    [ -> ifelse-value (get "criminal-history?") [ 0.678 ] [ 0     ] ]
    [ -> ifelse-value (get "immigrant?")        [ 0.081 ] [ 0     ] ]
    [ -> ifelse-value (get "authoritarian?")    [ 0.9   ] [ 0     ] ]
    [ -> ifelse-value (age <= 25)               [ 0.1   ] [ 0     ] ]
  )
end

to-report normalized-opinion-on-topic [ the-topic ]
  report [ (value + 1) / 2 ] of opinion-on-topic the-topic
end

to-report attribute-definitions
  report (list
    (list "male?"      [ -> one-of [true false] ])
    (list "muslim?"    [ -> random-float 1 < 0.1 ])
    (list "immigrant?" [ -> one-of [true false] ])
    (list "authoritarian?" [ -> one-of [true false] ])
    (list "criminal-history?" [ -> one-of [true false] ])
  )
end

to-report location-definitions
  report (list
    ;     number name/shape color
    (list      1 "mosque")
    (list      1 "school")
    (list      5 "public space")
    (list      5 "workplace")
    (list      5 "community center")
  )
end

to-report website-definitions
  report (list
    (list "Non integration" -1)
    (list "Non integration"  1) 
  )
end

to-report mandatory-activity-definition-list
  report (list
    ;     start-time duration location-type task         criteria
    (list          0        8 "residence"   [ -> sleep ] [ -> true ] )
    (list          8        8 "school"      [ -> study ] [ -> age >= 5 and age <= 18 ])
  )
end

to-report job-definition-list
  report (list
    ;     num-jobs start-time duration location-type task          criteria                  priority
    (list        1          8       16 "mosque"      [ -> preach ] [ -> age >= 21 and
      get "muslim?" and get "male?" and [ value ] of opinion-on-topic "Institutional distrust" = 1 ] 0
    )
    (list        1          8        16 "community center" [ -> preach ] [ -> age >= 18 and 
      [ value ] of opinion-on-topic "Institutional distrust" = -1]                                   0
    )
    (list        1          8        8 "school"           [ -> teach  ] [ -> age >= 21 ]     1)      
    (list       50          8        8 "workplace"        [ -> work   ] [ -> age >= 18 ]     1)
    (list        1         12        8 "bar"              [ -> work   ] [ -> age >= 18 ]     1)
    (list        1         16        8 "bar"              [ -> work   ] [ -> age >= 18 ]     1)
    
  )
end

to-report free-time-activity-definition-list
  report (list
    ;     location-type task             criteria
    (list "residence"        [ -> socialize ] [ -> true ])
    (list "public space"     [ -> socialize ] [ -> true ])
    (list "mosque"           [ -> socialize ] [ -> get "muslim?" ])
    (list "community center" [ -> socialize ] [ -> true ])
  )
end

to work ; generic work activity
  if random-float 1 < work-socialization-probability [ socialize ]
end

to preach
  let result talk-to other citizens-here one-of topics ; calling talk-to for its side effects
end

to teach
  let result talk-to other citizens-here one-of topics ; calling talk-to for its side effects
end

to-report topic-definitions
  let uniform [ -> -1 + random-float 2 ]
  ; Criteria are reporters with one speaker (myself) and one listener (self). 
  ; This makes the criteria compatible with the ones in activities.
  ; the risk and protection are used in risk calculation.
  report (list
    ;      type                             value     criteria    risk-weight protective-weight
    (list "Non integration"                 uniform   [ -> true ]    0.188     0.178)
    (list "Institutional distrust"          uniform   [ -> true ]    0.277     0.153)
    (list "Collective relative deprivation" uniform   both-muslims?  0.116     0    )
  )
end

to-report topic-list report map [ l -> first l ] topic-definitions end

to-report both-muslims?
  report [  -> 
    [ get "muslim?" ] of myself and get "muslim?"  
  ]
end

to make-special-citizens
  post-opinions-setup "mosque" "Institutional distrust" 1 [
    -> age >= 21 and get "muslim?" and get "male?" 
  ]
  post-opinions-setup "community center" "Institutional distrust" -1 [ -> age >= 18 ]
  let be-positive min [ risk ] of citizens
  if be-positive > 0 [ set be-positive 0 ]
  ask rnd:weighted-n-of initial-radicalized citizens [ risk - be-positive ] [set recruited? true]
end

to post-opinions-setup [ the-shape the-topic-name the-value the-criteria ]
  let n count locations with [ shape = the-shape ]
  let the-topic one-of topics with [ topic-name = the-topic-name ]
  ; initialize opinions about extremist websites
  let the-websites websites with [
    out-topic-link-to the-topic != nobody and
    [ value ] of out-topic-link-to the-topic = the-value
  ]
  ask n-of n citizens with [ runresult the-criteria ] [
    ask out-topic-link-to the-topic [
      set value the-value
    ]
    create-website-links-to the-websites [
      set value the-value
    ]
  ]
end

to-report workday-nonmuslim? report member? week-num (range 1 6)                                                             end ; citizen reporter
to-report weekday            report item week-num [ "Sunday" "Monday" "Tuesday" "Wednesday" "Thursday" "Friday" "Saturday" ] end ; citizen reporter
to-report workday-muslim?    report member? week-num (range 0 5)                                                             end ; citizen reporter
to-report workday?           report ifelse-value get "muslim?" [ workday-muslim? ] [ workday-nonmuslim? ]                    end ; citizen reporter
