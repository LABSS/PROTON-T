to-report random-birth-year report 0 - random 80 end
  
to-report propensity-factors
  ; first item is weight, second item is value (between 0 and 1)
  report (list
    (list 1 [ -> random-float 1 ]) ; stochastic factor
    (list 1 [ -> ifelse-value (attr "religion" = "R1") [ 1 ] [ 0 ] ])
  )
end

to-report risk-factors
  report (list
    ; weight, value (between 0 and 1)
    (list 1 [ -> propensity ])
    (list 1 [ -> 1 / ((abs (age - 18)) + 1) ])
  )
end

to-report attribute-definitions
  report (list
    (list "ethnicity" [ -> one-of ["E1" "E2" "E3" "E4"] ])
    (list "religion"  [ ->
      ifelse-value (attr "ethnicity" = "E1") [ "R1" ] [ one-of ["R2" "R3" "R4"] ] ]
    )
  )
end

to-report location-definitions
  report (list
    ; number, name, shape, color
    (list 1 "mosque"           "house two story" red)
    (list 1 "school"           "house ranch"     brown)
    (list 5 "cafe"             "building store"  orange)
    (list 5 "workplace"        "factory"         blue)
  )
end

to-report job-definition-list
  report (list
    ;     num-jobs  start-time duration location-type task
    (list  1        8          16       "mosque"      [ -> preach ] [ a -> [ age ] of a > 25 ])
    (list 50        8          8        "workplace"   [ -> work ]   [ a -> [ age ] of a > 18 ])
    (list  1        8          8        "cafe"        [ -> work ]   [ a -> [ age ] of a > 18 ])
    (list  1       16          8        "cafe"        [ -> work ]   [ a -> [ age ] of a > 18 ])
  )
end

to-report mandatory-activity-definition-list
  report (list
    ; start-time duration location-type task criteria
    (list 0 8 "residence" [ -> sleep ] [ -> true ] )
    (list 8 8 "school"    [ -> study ] [ a -> [ age >= 5 and age <= 18 ] of a ])
  )
end

to-report free-time-activity-definition-list
  report (list
    (list "residence" [ -> socialize ] [ -> true ])
    (list "cafe"      [ -> socialize ] [ -> true ])
    (list "park"      [ -> socialize ] [ -> true ])
  )
end

to work ; generic work activity
  ; small chance to socialize (TODO revisit that)
  if random-float 1 < 0.1 [ socialize ]
end

to preach
  talk-to citizens-here one-of topics with [ topic-name = "T1" ]
end

to-report topic-definitions
  report (list
    (list "T1" [ -> one-of [1 -1] * (1 - abs clipped-random-normal 0 0.3 -1 1) ])
    (list "T2" [ -> clipped-random-normal 0 0.3 -1 1 ])
    (list "T3" [ -> -1 + random-float 2 ])
  )
end